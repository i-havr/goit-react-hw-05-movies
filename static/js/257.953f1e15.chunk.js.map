{"version":3,"file":"static/js/257.953f1e15.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/MovieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  /* display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &: hover {\n    opacity: 1;\n  } ; */\n\n  right: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* width: 40px;\n  height: 40px; */\n  padding: 2px 15px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  color: #ffffff;\n  fill: #ffffff;\n  background-color: grey;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 1;\n\n  &:hover,\n  &:focus {\n    background-color: #616161;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nexport const Button = ({ children }) => {\n  return <ButtonStyled type=\"button\">{children}</ButtonStyled>;\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsStyled = styled.div`\n  display: block;\n  padding-left: 40px;\n  padding-right: 40px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding-right: 10%;\n`;\n\nexport const MovieDescription = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: start;\n  flex-direction: column;\n  margin-left: 20px;\n  padding: 20px 0px;\n`;\n\nexport const FilmTitle = styled.h1`\n  margin-bottom: 10px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 40px;\n`;\n\nexport const OverviewTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Overview = styled.p`\n  /* width: 75%; */\n  margin-bottom: 40px;\n`;\n\nexport const GenresTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Genres = styled.p`\n  /* margin-bottom: 10px; */\n`;\n\nexport const AdditionalContainer = styled.div`\n  /* border-bottom: 1px solid #c6c6c6; */\n  padding: 0;\n  padding-bottom: 20px;\n`;\n\nexport const AdditionalTitle = styled.h4`\n  border-bottom: 1px solid #c6c6c6;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalList = styled.ul`\n  margin-bottom: 10px;\n  padding: 0;\n  padding-bottom: 10px;\n  list-style: none;\n  line-height: 1.4;\n  border-bottom: 1px solid #c6c6c6;\n\n  > li {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    &::before {\n      content: '';\n      width: 8px;\n      height: 8px;\n      margin-right: 14px;\n      border-radius: 999px;\n      background-color: orange;\n    }\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport const LinkButtonStyled = styled(Link)`\n  text-decoration: none;\n  & > button {\n    padding: 5px 10px;\n    font-size: 12px;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { toast } from 'react-toastify';\nimport {\n  MovieDetailsStyled,\n  MovieInfo,\n  MovieDescription,\n  FilmTitle,\n  UserScore,\n  OverviewTitle,\n  Overview,\n  AdditionalContainer,\n  AdditionalTitle,\n  AdditionalList,\n  LinkStyled,\n  LinkButtonStyled,\n  GenresTitle,\n  Genres,\n} from './MovieDetails.styled';\nimport { Button } from '../../components/Button/Button';\nimport { getMovieById } from 'services/MovieApi';\nimport { Loader } from 'components/Loader/Loader';\nimport notFoundImage from '../../images/image-not-found.jpg';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState(null);\n  const location = useLocation();\n  const goBack = location.state?.from ?? '/';\n\n  const posterPathBase = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    const getFilm = async () => {\n      try {\n        const film = await getMovieById(movieId);\n        setFilm(film);\n      } catch (error) {\n        toast.error('Whoops, something went wrong ', error.message);\n        return;\n      }\n    };\n    getFilm();\n  }, [movieId]);\n\n  if (film) {\n    const { title, release_date, poster_path, overview, vote_average, genres } =\n      film;\n    return (\n      <MovieDetailsStyled>\n        <LinkButtonStyled to={goBack}>\n          <Button>\n            <HiArrowLeft size=\"14\" />\n            {'\\u202f'} Go back\n          </Button>\n        </LinkButtonStyled>\n        <MovieInfo>\n          {!poster_path ? (\n            <img src={notFoundImage} alt=\"Poster not found\" width={250} />\n          ) : (\n            <img src={posterPathBase + poster_path} alt={title} width={250} />\n          )}\n          <MovieDescription>\n            <FilmTitle>\n              {title} ({release_date.slice(0, 4)})\n            </FilmTitle>\n            <UserScore>User Score: {Math.round(vote_average * 10)}%</UserScore>\n            <OverviewTitle>Overview</OverviewTitle>\n            <Overview>{overview}</Overview>\n            <GenresTitle>Genres</GenresTitle>\n            <Genres>{genres.map(genre => genre.name).join(', ')}</Genres>\n          </MovieDescription>\n        </MovieInfo>\n\n        <AdditionalContainer>\n          <AdditionalTitle>Additional information</AdditionalTitle>\n          <AdditionalList>\n            <li>\n              <LinkStyled to=\"cast\" state={{ from: location.state?.from }}>\n                Cast\n              </LinkStyled>\n            </li>\n            <li>\n              <LinkStyled to=\"reviews\" state={{ from: location.state?.from }}>\n                Reviews\n              </LinkStyled>\n            </li>\n          </AdditionalList>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </AdditionalContainer>\n      </MovieDetailsStyled>\n    );\n  }\n}\n","import axios from 'axios';\nconst API_KEY = '070e726b821084418d8595d77c6d6564';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCreditsById = async movieId => {\n  const response = await axios.get(\n    `/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviewsById = async movieId => {\n  const response = await axios.get(\n    `/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["ButtonStyled","styled","Button","children","type","MovieDetailsStyled","MovieInfo","MovieDescription","FilmTitle","UserScore","OverviewTitle","Overview","GenresTitle","Genres","AdditionalContainer","AdditionalTitle","AdditionalList","LinkStyled","Link","LinkButtonStyled","MovieDetails","movieId","useParams","useState","film","setFilm","location","useLocation","goBack","state","from","useEffect","getFilm","getMovieById","toast","message","title","release_date","poster_path","overview","vote_average","genres","to","size","src","alt","width","notFoundImage","slice","Math","round","map","genre","name","join","Suspense","fallback","Loader","API_KEY","axios","getTrendingMovies","response","data","results","searchMovies","query","getCreditsById","getReviewsById"],"sourceRoot":""}