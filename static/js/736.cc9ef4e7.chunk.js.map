{"version":3,"file":"static/js/736.cc9ef4e7.chunk.js","mappings":"0RAEaA,EAAaC,EAAAA,GAAAA,IAAH,2CAIVC,EAAiBD,EAAAA,GAAAA,GAAH,oHAQdE,EAAiBF,EAAAA,GAAAA,GAAH,8EAKdG,EAAkBH,EAAAA,GAAAA,EAAH,yFAMfI,EAAkBJ,EAAAA,GAAAA,EAAH,wE,6BCZb,SAASK,IACtB,OAA6BC,EAAAA,EAAAA,UAAS,MAAtC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAeJ,GAFxB,gBAENK,EAFM,EAENA,KACRN,EAAWM,GAHG,uDAKdC,EAAAA,GAAAA,MAAY,gCAAiC,KAAMC,SALrC,4EAAH,qDASfJ,GACD,GAAE,CAACH,KAGF,SAACV,EAAD,UACsB,KAAb,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQU,SACP,+DAEA,SAAChB,EAAD,iBACGM,QADH,IACGA,OADH,EACGA,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,aAA/B,OACX,UAACpB,EAAD,WACGoB,GACC,gBAAKC,IAxBG,kCAwBkBD,EAAcE,IAAKJ,KAE7C,gBAAKG,IAAKE,EAAeD,IAAI,eAE/B,SAACrB,EAAD,UAAkBiB,KAClB,UAAChB,EAAD,yBAEE,kBACCiB,OAVgBF,EADV,OAmBtB,C,mMCxDKO,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,6BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,wCAA2CD,IADnC,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,kCACMD,EADN,kBACuBO,IAFpB,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZG,EAAY,mCAAG,WAAMzB,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,mBAAsBlB,EAAtB,oBAAyCiB,IADtC,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZjB,EAAc,mCAAG,WAAMJ,GAAN,uFACLkB,EAAAA,EAAAA,IAAA,mBACTlB,EADS,4BACkBiB,IAFb,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAc,mCAAG,WAAM1B,GAAN,uFACLkB,EAAAA,EAAAA,IAAA,mBACTlB,EADS,4BACkBiB,IAFb,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/MovieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastStyled = styled.div`\n  display: block;\n`;\n\nexport const CastListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: -15px;\n  padding: 0;\n`;\n\nexport const CastItemStyled = styled.li`\n  width: calc((100% - 300px) / 10);\n  margin: 15px;\n`;\n\nexport const ActorNameStyled = styled.p`\n  font-size: 12px;\n  margin-bottom: 5px;\n  font-weight: bold;\n`;\n\nexport const CharacterStyled = styled.p`\n  font-size: 12px;\n  /* font-weight: bold; */\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport {\n  CastStyled,\n  CastListStyled,\n  CastItemStyled,\n  ActorNameStyled,\n  CharacterStyled,\n} from './Cast.styled';\nimport { getCreditsById } from 'services/MovieApi';\nimport notFoundImage from '../../images/image-not-found.jpg';\n\nexport default function Cast() {\n  const [actors, setCredits] = useState(null);\n  const { movieId } = useParams();\n\n  const photoPathBase = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    const getActors = async () => {\n      try {\n        const { cast } = await getCreditsById(movieId);\n        setCredits(cast);\n      } catch (error) {\n        toast.error('Whoops, something went wrong ', error.message);\n        return;\n      }\n    };\n    getActors();\n  }, [movieId]);\n\n  return (\n    <CastStyled>\n      {actors?.length === 0 ? (\n        <p>There is no information to display</p>\n      ) : (\n        <CastListStyled>\n          {actors?.map(({ credit_id, name, character, profile_path }) => (\n            <CastItemStyled key={credit_id}>\n              {profile_path ? (\n                <img src={photoPathBase + profile_path} alt={name} />\n              ) : (\n                <img src={notFoundImage} alt=\"Not found\" />\n              )}\n              <ActorNameStyled>{name}</ActorNameStyled>\n              <CharacterStyled>\n                Character:\n                <br />\n                {character}\n              </CharacterStyled>\n            </CastItemStyled>\n          ))}\n        </CastListStyled>\n      )}\n    </CastStyled>\n  );\n}\n","import axios from 'axios';\nconst API_KEY = '070e726b821084418d8595d77c6d6564';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCreditsById = async movieId => {\n  const response = await axios.get(\n    `/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviewsById = async movieId => {\n  const response = await axios.get(\n    `/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["CastStyled","styled","CastListStyled","CastItemStyled","ActorNameStyled","CharacterStyled","Cast","useState","actors","setCredits","movieId","useParams","useEffect","getActors","getCreditsById","cast","toast","message","length","map","credit_id","name","character","profile_path","src","alt","notFoundImage","API_KEY","axios","getTrendingMovies","response","data","results","searchMovies","query","getMovieById","getReviewsById"],"sourceRoot":""}