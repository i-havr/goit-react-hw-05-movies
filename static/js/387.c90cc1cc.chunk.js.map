{"version":3,"file":"static/js/387.c90cc1cc.chunk.js","mappings":"4RAEaA,EAAgBC,EAAAA,GAAAA,IAAH,kEAKbC,EAAoBD,EAAAA,GAAAA,GAAH,0DAKjBE,EAAmBF,EAAAA,GAAAA,GAAH,mEAKhBG,EAAqBH,EAAAA,GAAAA,GAAH,2CAIlBI,EAAsBJ,EAAAA,GAAAA,EAAH,8HAOnBK,EAAmBL,EAAAA,GAAAA,KAAH,mE,mBCfd,SAASM,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEOC,EAAAA,EAAAA,IAAeJ,GAFtB,OAETF,EAFS,OAGfC,EAAWD,GAHI,uDAKfO,EAAAA,GAAAA,MAAY,gCAAiC,KAAMC,SALpC,4EAAH,qDAShBH,GACD,GAAE,CAACH,KAGF,SAACX,EAAD,UACuB,KAAb,OAAPS,QAAO,IAAPA,OAAA,EAAAA,EAASS,SACR,qDAEA,SAAChB,EAAD,iBACGO,QADH,IACGA,OADH,EACGA,EAASU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,QAA3B,OACZ,UAACpB,EAAD,YACE,SAACC,EAAD,UAAqBiB,KACrB,wBACE,SAACf,EAAD,UACG,IAAIkB,KAAKF,GAAYG,0BAG1B,SAACpB,EAAD,UAAsBkB,MAPDH,EADX,OAevB,C,mMClDKM,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,6BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,wCAA2CD,IADnC,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,EAAAA,IAAA,kCACMD,EADN,kBACuBO,IAFpB,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZG,EAAY,mCAAG,WAAMvB,GAAN,uFACHgB,EAAAA,EAAAA,IAAA,mBAAsBhB,EAAtB,oBAAyCe,IADtC,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAc,mCAAG,WAAMxB,GAAN,uFACLgB,EAAAA,EAAAA,IAAA,mBACThB,EADS,4BACkBe,IAFb,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdf,EAAc,mCAAG,WAAMJ,GAAN,uFACLgB,EAAAA,EAAAA,IAAA,mBACThB,EADS,4BACkBe,IAFb,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/MovieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsStyled = styled.div`\n  display: block;\n  padding-right: 10%;\n`;\n\nexport const ReviewsListStyled = styled.ul`\n  display: block;\n  padding: 0;\n`;\n\nexport const ReviewItemStyled = styled.li`\n  display: block;\n  margin-bottom: 20px;\n`;\n\nexport const ReviewAuthorStyled = styled.h4`\n  display: block;\n`;\n\nexport const ReviewContentStyled = styled.p`\n  display: block;\n  margin-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #c6c6c6;\n`;\n\nexport const ReviewDateStyled = styled.time`\n  font-size: 12px;\n  font-style: italic;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport {\n  ReviewsStyled,\n  ReviewsListStyled,\n  ReviewItemStyled,\n  ReviewAuthorStyled,\n  ReviewContentStyled,\n  ReviewDateStyled,\n} from './Reviews.styled';\nimport { getReviewsById } from 'services/MovieApi';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const reviews = await getReviewsById(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        toast.error('Whoops, something went wrong ', error.message);\n        return;\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsStyled>\n      {reviews?.length === 0 ? (\n        <p>There are no reviews yet</p>\n      ) : (\n        <ReviewsListStyled>\n          {reviews?.map(({ id, author, created_at, content }) => (\n            <ReviewItemStyled key={id}>\n              <ReviewAuthorStyled>{author}</ReviewAuthorStyled>\n              <p>\n                <ReviewDateStyled>\n                  {new Date(created_at).toLocaleDateString()}\n                </ReviewDateStyled>\n              </p>\n              <ReviewContentStyled>{content}</ReviewContentStyled>\n            </ReviewItemStyled>\n          ))}\n        </ReviewsListStyled>\n      )}\n    </ReviewsStyled>\n  );\n}\n","import axios from 'axios';\nconst API_KEY = '070e726b821084418d8595d77c6d6564';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCreditsById = async movieId => {\n  const response = await axios.get(\n    `/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviewsById = async movieId => {\n  const response = await axios.get(\n    `/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["ReviewsStyled","styled","ReviewsListStyled","ReviewItemStyled","ReviewAuthorStyled","ReviewContentStyled","ReviewDateStyled","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","getReviewsById","toast","message","length","map","id","author","created_at","content","Date","toLocaleDateString","API_KEY","axios","getTrendingMovies","response","data","results","searchMovies","query","getMovieById","getCreditsById"],"sourceRoot":""}